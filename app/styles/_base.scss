
//-----------------------------------
// Variables
//-----------------------------------


$line-height: 1.5 !default;
$font-size: 16px !default;

$font-color: #222 !default;
$link-color: #0002CC !default;
$link-color-hover: #0002CC !default;

$selection-color: #08f !default;

$background-color: #fff;

$font-family-sans: "Helvetica", sans-serif;
$font-family-serif: "Georgia", serif;
$font-family-display: "Helvetica", sans-serif;


/* ==========================================================================
   H5BP Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers: h5bp.com/u
 */

%hidden {
    display: none !important;
    visibility: hidden;
}

/*
 * Hide only visually, but have it available for screen readers: h5bp.com/v
 */

%visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

/*
 * Extends the .visuallyhidden class to allow the element to be focusable
 * when navigated to via the keyboard: h5bp.com/p
 */

%visuallyhidden.focusable:active,
%visuallyhidden.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

%invisible {
    visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

%clearfix:before,
%clearfix:after {
    content: " "; /* 1 */
    display: table; /* 2 */
}

%clearfix:after {
    clear: both;
}


//-----------------------------------
// Mixins, Helpers, etc.
//-----------------------------------

@mixin bg-grid($color: #dadada, $bg-color: transparent, $lh: $line-height) {
  background-color: $bg-color;
  background-image: linear-gradient(0deg,
      transparent 98%,
      $color 99%,
      $color),
    linear-gradient(90deg,
      transparent 49%,
      $color 50%,
      $color 51%,
      transparent 52%,
      transparent);
    background-size: ($lh * 1em) ($lh * 1em);
}

@mixin grid-border($color: $font-color) {
  position: relative;

  &:before {
    position: absolute;
    top: -.08em;
    bottom: -.4em;
    left: -.24em;
    content: " ";
    width: 1px;
    border-left: 1px solid $font-color;
  }
  &:after {
    position: absolute;
    left: -.66em;
    right: 0;
    bottom: 2px;
    content: " ";
    border-top: 1px solid $font-color;
  }
}



/* uncollapse margins */
%uncollapse-margin {
  &:before, &:after {
    content: "\00a0"; /* nbsp; */
    display: block;
    overflow: hidden;
    height: 0;
  }
}


//-----------------------------------
//  Typograhpic scale and rhythm.
//-----------------------------------

$scale-factor: 1.5;
$min-line-padding: .1em;
// NOTE: the mixin and function below also depend on a variable called $line-height.


@function pow ($x, $n) {
    $ret: 1;

    @if $n >= 0 {
        @for $i from 1 through $n {
            $ret: $ret * $x;
        }
    } @else {
        @for $i from $n to 0 {
            $ret: $ret / $x;
        }
    }

    @return $ret;
}


// Calculate the minimum multiple of rhythm units needed to contain the font-size.
// Based on https://github.com/chriseppstein/compass/blob/stable/frameworks/compass/stylesheets/compass/typography/_vertical_rhythm.scss
@function lines-for-font-size($font-size) {
  $lines: ceil($font-size / ($line-height * 1em));
  @if $lines * $line-height * 1em - $font-size < $min-line-padding * 2 {
    $lines: $lines + 1;
  }
  @return $lines;
}

// Calculate the unitless line height needed for the given $font-size to take up $lines lines
// in the baseline grid established by $line-height.
@function line-height-for-font-size($font-size, $lines: 1) {
  @return $line-height * (1em / $font-size) * $lines;
}

// Return the length, in ems, of a given level (power) of a scale.
@function scale-to($level, $scale-factor: $scale-factor) {
  @return (1em * pow($scale-factor, $level));
}

// Return a measurement for the given number of lines.
@function lines($lines) {
  @return (1rem * $line-height * $lines);
}

@mixin scale-type($font-size: $font-size, $leader: 0, $trailer: 0, $lines: -1) {
  @if $lines == -1 {
    $lines: lines-for-font-size($font-size)
  }
  margin-top: lines($leader);
  font-size: $font-size;
  line-height: line-height-for-font-size($font-size, $lines);
  margin-bottom: lines($trailer);
}



//-----------------------------------
// Grid
//-----------------------------------

@mixin column($proportion) {
  float: left;
  margin-left: 5%;
  width: $proportion*100% - 5%;

  &:first-of-type {
    margin-left: 0;
  }
}

@mixin row {
  @extend %clearfix;
}



//-----------------------------------
// Variables
//-----------------------------------

/*
http://www.paulirish.com/2012/box-sizing-border-box-ftw/
*/
*, *:before, *:after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
